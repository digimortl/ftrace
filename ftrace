#!/usr/bin/env bash

set -e

tracefs="/sys/kernel/tracing"

enable_ftrace() {
  cat /dev/null > $tracefs/trace
  echo nop > $tracefs/current_tracer
  echo 0 > $tracefs/tracing_on
  echo $2 > $tracefs/set_ftrace_pid
  echo $1 > $tracefs/current_tracer
  #echo <some_tracee_function_if_any> > /$tracef/sset_graph_function
  echo 1 > $tracefs/tracing_on
}

disable_ftrace() {
  echo 0 > $tracefs/tracing_on
  cp -f $tracefs/trace trace.txt
  echo > $tracefs/set_ftrace_pid
  echo > $tracefs/set_graph_function
  echo nop > $tracefs/current_tracer
  cat /dev/null > $tracefs/trace
  echo >&2 "Tracer disabled, check trace.txt file."
}

usage() {
  echo >&2 "Usage: $(basename $0) start [-g|--graph] { PROGRAM|PID }"
  echo >&2 "Usage: $(basename $0) stop"
  exit 2
}

if [[ $1 == "start" ]]; then  
  shift

  TRACER="function"
  if [[ $1 == "-g" || $1 == "--graph" ]]; then
    TRACER="function_graph"
    shift
  fi

  PID=$$
  if [[ $1 =~ ^[1-9][0-9]*$ ]]; then
    PID=$1
    echo >&2 "tracee: PID $PID"
    shift
  fi

  enable_ftrace $TRACER $PID

  if [[ $# -gt 0 ]]; then
    echo >&2 "tracee: $@"
    exec "$@"
  fi
elif [[ $1 == "stop" ]]; then
  disable_ftrace
else
  usage
fi


